
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'name': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Pipeline - basics',
        description='Workflow name.',
    ),
    'input': NextflowParameter(
        type=str,
        default='data/*{1,2}.fastq.gz',
        section_title=None,
        description='Input files can be read as either .fastq or .fastq.gz. They should be named descriptively without spaces and special characters (such as : and @), with the corresponding replicate (if any) appended at the end. The best practise for this pipeline is to use underscores to separate different experimental conditions.',
    ),
    'single_end': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specifies that the input is single-end reads.',
    ),
    'outdir': NextflowParameter(
        type=typing.Optional[typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})]],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved.',
    ),
    'fasta_host': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Genome references and annotation',
        description='Host fasta file',
    ),
    'fasta_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Pathogen fasta file',
    ),
    'gff_host_genome': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Host GFF file',
    ),
    'gff_host_tRNA': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Host GFF file for tRNAs (optional)',
    ),
    'gff_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Pathogen GFF',
    ),
    'transcriptome_host': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Host transcriptome file',
    ),
    'transcriptome_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Pathogen transcriptome file',
    ),
    'read_transcriptome_fasta_host_from_file': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If supplying custom transcriptome files',
    ),
    'read_transcriptome_fasta_pathogen_from_file': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If supplying custom transcriptome files',
    ),
    'genome_host': NextflowParameter(
        type=typing.Optional[str],
        default='GRCh38',
        section_title=None,
        description='Name of host genome in the genomes.conf file',
    ),
    'genome_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default='SL1344',
        section_title=None,
        description='Name of host genome in the genomes.conf file',
    ),
    'genomes_ignore': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description=None,
    ),
    'skip_fastqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='FastQC',
        description='An option to not run FastQC. (Default: False)  This is set to False within the configuration files, but only needs to be passed on the command line to become True.',
    ),
    'fastqc_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Define a set of additional fastqc parameters you wish to use, except --quiet --threads --noextract flags which are already specified in the dualrnaseq pipeline',
    ),
    'run_cutadapt': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Cutadapt',
        description='To run Cutadapt',
    ),
    'a': NextflowParameter(
        type=typing.Optional[str],
        default='AGATCGGAAGAGCACACGTCTGAACTCCAGTCA',
        section_title=None,
        description='Adaptor for For single-end reads as well as the first reads of paired-end data',
    ),
    'A': NextflowParameter(
        type=typing.Optional[str],
        default='AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT',
        section_title=None,
        description='For paired-end data, the adapter sequence for the second reads can be defined here',
    ),
    'quality_cutoff': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description="Cutadapt can also remove low-quality read ends. By default, the 3\\u2019 end of each read is trimmed using a cutoff of 10. If you specify two comma-separated cutoffs, the first value represents the 5' cutoff, and the second one the 3' cutoff",
    ),
    'cutadapt_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Additional parameters if needed',
    ),
    'run_bbduk': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='BBDuk',
        description='To run BBDuk',
    ),
    'minlen': NextflowParameter(
        type=typing.Optional[int],
        default=18,
        section_title=None,
        description='Reads shorter than this after trimming will be discarded',
    ),
    'qtrim': NextflowParameter(
        type=typing.Optional[str],
        default='r',
        section_title=None,
        description='To trim read ends to remove bases with quality below trimq',
    ),
    'trimq': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Cutoff to trim regions with average quality BELOW given value',
    ),
    'ktrim': NextflowParameter(
        type=typing.Optional[str],
        default='r',
        section_title=None,
        description="To trim reads to remove bases matching reference kmers. Avaiable options: f (don't trim), r (trim to the right - 3' adapters) l (trim to the left - 5' adapters)",
    ),
    'k': NextflowParameter(
        type=typing.Optional[int],
        default=17,
        section_title=None,
        description='Kmer length used for finding contaminants (adapters). Contaminants shorter than k will not be found. k must be at least 1',
    ),
    'mink': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Look for shorter kmers at read tips down to this length when k-trimming or masking. 0 means disabled.  Enabling this will disable maskmiddle',
    ),
    'hdist': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Maximum Hamming distance for ref kmers (subs only)',
    ),
    'adapters': NextflowParameter(
        type=typing.Optional[str],
        default='data/adapters.fa',
        section_title=None,
        description='Fasta file with adapter sequences (Default: $baseDir/data/adapters.fa)',
    ),
    'bbduk_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional BBDuk parameters',
    ),
    'libtype': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Salmon - general',
        description='Options for setting the library type. A = automatic detection',
    ),
    'incompatPrior': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='By default, this is set to 0.0, to ensure that only mappings or alignments that are compatible with the specified library type are considered by Salmon',
    ),
    'generate_salmon_uniq_ambig': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Option to extract all of the unique and ambiguous reads after quantification',
    ),
    'gene_feature_gff_to_create_transcriptome_host': NextflowParameter(
        type=typing.Optional[str],
        default="['exon', 'tRNA']",
        section_title=None,
        description='The pipeline uses gene features from the 3rd column of the host annotative file (gff3) to extract the coordinates of transcripts to be quantified.  By default, the pipeline useanscriptome_hosts exon from the --gff_host file and tRNA from the --gff_host_tRNA file',
    ),
    'gene_feature_gff_to_create_transcriptome_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default="['gene', 'sRNA', 'tRNA', 'rRNA']",
        section_title=None,
        description='The pipeline uses gene features from the 3rd column of the pathogen annotative fikle (gff3) to extract the coordinates of transcripts to be quantified.  By default, the pipeline uses features as gene, sRNA, tRNA and rRNA from the --gff_pathogen file.',
    ),
    'gene_attribute_gff_to_create_transcriptome_host': NextflowParameter(
        type=typing.Optional[str],
        default='transcript_id',
        section_title=None,
        description='This flag defines the gene attribute from the 9th column of the host annotative (gff3) file, where the transcript names are extracted.  By default, the pipeline extracts transcript_id from the --gff_host file',
    ),
    'gene_attribute_gff_to_create_transcriptome_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default='locus_tag',
        section_title=None,
        description='This flag defines the gene attribute from the 9th column of the pathogen annotative (gff3) file, where transcript, genes or CDS regions are extracted.  By default, the pipeline extracts locus_tag from the --gff_pathogen file',
    ),
    'run_salmon_selective_alignment': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Salmon - Selective alignment',
        description='Run Salmon selective alignment',
    ),
    'kmer_length': NextflowParameter(
        type=typing.Optional[int],
        default=21,
        section_title=None,
        description='To define the k-mer length (-k parameter in Salmon)',
    ),
    'writeUnmappedNames': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='By default the pipeline saves names of unmapped reads',
    ),
    'softclipOverhangs': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='By default, the pipeline allows soft-clipping of reads',
    ),
    'dumpEq': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='o save the equivalence classes and their counts',
    ),
    'writeMappings': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='set to True, the pipeline will create a mapping.sam file containing mapping information',
    ),
    'keepDuplicates': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='By default salmon removes/collapses identical transcripts during the indexing stage',
    ),
    'salmon_sa_params_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional parameters for creating an index with Salmon Selective Alignment',
    ),
    'salmon_sa_params_mapping': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional parameters for mapping with Salmon Selective Alignment',
    ),
    'run_salmon_alignment_based_mode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Salmon - Alignment based mode',
        description='To run Salmon alignment-based mode',
    ),
    'salmon_alignment_based_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Define a set of additional salmon quant parameters you wish to use in salmon alignment-based mode.',
    ),
    'run_star': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='STAR - general',
        description='To run STAR',
    ),
    'outSAMunmapped': NextflowParameter(
        type=typing.Optional[str],
        default='Within',
        section_title=None,
        description='By default, the pipeline saves unmapped reads within the main BAM file. If you want to switch off this option, set the --outSAMunmapped flag to None',
    ),
    'outSAMattributes': NextflowParameter(
        type=typing.Optional[str],
        default='Standard',
        section_title=None,
        description='o specify the attributes of the output BAM file. The default value is Standard, but there are a range of options if needed',
    ),
    'outFilterMultimapNmax': NextflowParameter(
        type=typing.Optional[int],
        default=999,
        section_title=None,
        description='To specify the maximum number of loci a read is allowed to map to',
    ),
    'outFilterType': NextflowParameter(
        type=typing.Optional[str],
        default='BySJout',
        section_title=None,
        description='By default, the pipeline keeps reads containing junctions that passed filtering into the file SJ.out.tab. This option reduces the number of ”spurious” junctions',
    ),
    'alignSJoverhangMin': NextflowParameter(
        type=typing.Optional[int],
        default=8,
        section_title=None,
        description='The number of minimum overhang for unannotated junctions can be changed here',
    ),
    'alignSJDBoverhangMin': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='The number of minimum overhang for annotated junctions can be changed here',
    ),
    'outFilterMismatchNmax': NextflowParameter(
        type=typing.Optional[int],
        default=999,
        section_title=None,
        description='To define a threshold for the number of mismatches to be allowed. By default, the pipeline uses a large number 999 to switch this filter off.',
    ),
    'outFilterMismatchNoverReadLmax': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Here, you can define a threshold for a ratio of mismatches to read length. The alignment will be considered if the ratio is less than or equal to this value',
    ),
    'alignIntronMin': NextflowParameter(
        type=typing.Optional[int],
        default=20,
        section_title=None,
        description='By default, the nf-core dualrnaseq pipeline uses 20 as a minimum intron length. If the genomic gap is smaller than this value, it is considered as a deletion',
    ),
    'alignIntronMax': NextflowParameter(
        type=typing.Optional[int],
        default=1000000,
        section_title=None,
        description='The maximum intron length is set to 1,000,000',
    ),
    'alignMatesGapMax': NextflowParameter(
        type=typing.Optional[int],
        default=1000000,
        section_title=None,
        description='The maximum genomic distance between mates is 1,000,000',
    ),
    'limitBAMsortRAM': NextflowParameter(
        type=typing.Optional[int],
        default='0',
        section_title=None,
        description='Option to limit RAM when sorting BAM file. If 0, will be set to the genome index size, which can be quite large when running on a desktop or laptop',
    ),
    'winAnchorMultimapNmax': NextflowParameter(
        type=typing.Optional[int],
        default=999,
        section_title=None,
        description='The maximum number of loci anchors that are allowed to map. By default, the pipeline uses a large number 999 to switch this filter off.',
    ),
    'sjdbOverhang': NextflowParameter(
        type=typing.Optional[int],
        default=100,
        section_title=None,
        description='Option to specify the length of the donor/acceptor sequence on each side of the junctions used in constructing the splice junctions database. By default the option is set to 100. However, we recommend setting a value depending on the read length: read/mate length - 1.',
    ),
    'quantTranscriptomeBan': NextflowParameter(
        type=typing.Optional[str],
        default='Singleend',
        section_title='STAR - Salmon - alignment-based mode',
        description='The nf-core/dualrnaseq pipeline runs STAR to generate transcriptomic alignments. By default, it allows for insertions, deletions and soft-clips (Singleend option). To prohibit this behaviour, please specify IndelSoftclipSingleend',
    ),
    'star_salmon_index_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Define additional parameters for creating an index with STAR in salmon',
    ),
    'star_salmon_alignment_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Define additional parameters for alignment with STAR in salmon alignment-based mode',
    ),
    'outWigType': NextflowParameter(
        type=typing.Optional[str],
        default='None',
        section_title='STAR - HTseq',
        description='Used to generate signal outputs, such as "wiggle" and "bedGraph".',
    ),
    'outWigStrand': NextflowParameter(
        type=typing.Optional[str],
        default='Stranded',
        section_title=None,
        description='Options are Stranded or Unstranded when defining the strandedness of wiggle/bedGraph output',
    ),
    'star_index_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional parameters for creating an index with STAR',
    ),
    'star_alignment_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional parameters for alignment with STAR',
    ),
    'run_htseq_uniquely_mapped': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='HTSeq - general',
        description='Used to run HTSeq-count and extract uniquely mapped reads from both the host and pathogen',
    ),
    'stranded': NextflowParameter(
        type=typing.Optional[str],
        default='yes',
        section_title=None,
        description='A parameter for the library type. Options include "yes", "no" or "reverse"',
    ),
    'max_reads_in_buffer': NextflowParameter(
        type=typing.Optional[int],
        default=30000000,
        section_title=None,
        description='Option to define the number of maximum reads allowed to stay in memory until the mates are found. Has an effect for paired-end reads',
    ),
    'minaqual': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='To specify a threshold for a minimal MAPQ alignment quality',
    ),
    'htseq_params': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Set of additional parameters for HTSeq',
    ),
    'gene_feature_gff_to_quantify_host': NextflowParameter(
        type=typing.Optional[str],
        default="['exon', 'tRNA']",
        section_title='HTSeq - features',
        description='Host - gene feature to quantify',
    ),
    'host_gff_attribute': NextflowParameter(
        type=typing.Optional[str],
        default='gene_id',
        section_title=None,
        description='Host - GFF attribute',
    ),
    'gene_feature_gff_to_quantify_pathogen': NextflowParameter(
        type=typing.Optional[str],
        default="['gene', 'sRNA', 'tRNA', 'rRNA']",
        section_title=None,
        description='Pathogen - gene feature to quantify (will likely need to be modified)',
    ),
    'pathogen_gff_attribute': NextflowParameter(
        type=typing.Optional[str],
        default='locus_tag',
        section_title=None,
        description='Pathogen - GFF attribute (Will likely need to be modified)',
    ),
    'mapping_statistics': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='RNA mapping statistics',
        description='Option to generate mapping statistics, creating plots and summaries',
    ),
    'rna_classes_to_replace_host': NextflowParameter(
        type=typing.Optional[str],
        default='{base_dir}/data/RNA_classes_to_replace.csv',
        section_title=None,
        description='Tab delimited file contains headers which groups similar types of RNA classes together. This helps to keep the RNA-class names simplified for plotting purposes',
    ),
}

